import { z } from 'zod';
export declare const envConfigSchema: z.ZodObject<{
    JWT_SECRET: z.ZodString;
    AWS_REGION: z.ZodString;
    AWS_BUCKET: z.ZodString;
    AWS_ENDPOINT: z.ZodString;
    AWS_ACCESS_KEY_ID: z.ZodString;
    AWS_SECRET_ACCESS_KEY: z.ZodString;
    DATABASE_URL: z.ZodString;
    GOOGLE_CLIENT_ID: z.ZodString;
    GOOGLE_CLIENT_SECRET: z.ZodString;
    NODE_ENV: z.ZodString;
    SENTRY_DSN: z.ZodString;
    MAX_UPLOAD_SIZE: z.ZodEffects<z.ZodString, number, string>;
    PORT: z.ZodEffects<z.ZodString, number, string>;
    SERVER_URL: z.ZodString;
    STORAGE_URL: z.ZodString;
    OPENAI_API_KEY: z.ZodString;
    DEEPL_API_KEY: z.ZodString;
}, "strip", z.ZodTypeAny, {
    JWT_SECRET?: string;
    AWS_REGION?: string;
    AWS_BUCKET?: string;
    AWS_ENDPOINT?: string;
    AWS_ACCESS_KEY_ID?: string;
    AWS_SECRET_ACCESS_KEY?: string;
    DATABASE_URL?: string;
    GOOGLE_CLIENT_ID?: string;
    GOOGLE_CLIENT_SECRET?: string;
    NODE_ENV?: string;
    SENTRY_DSN?: string;
    MAX_UPLOAD_SIZE?: number;
    PORT?: number;
    SERVER_URL?: string;
    STORAGE_URL?: string;
    OPENAI_API_KEY?: string;
    DEEPL_API_KEY?: string;
}, {
    JWT_SECRET?: string;
    AWS_REGION?: string;
    AWS_BUCKET?: string;
    AWS_ENDPOINT?: string;
    AWS_ACCESS_KEY_ID?: string;
    AWS_SECRET_ACCESS_KEY?: string;
    DATABASE_URL?: string;
    GOOGLE_CLIENT_ID?: string;
    GOOGLE_CLIENT_SECRET?: string;
    NODE_ENV?: string;
    SENTRY_DSN?: string;
    MAX_UPLOAD_SIZE?: string;
    PORT?: string;
    SERVER_URL?: string;
    STORAGE_URL?: string;
    OPENAI_API_KEY?: string;
    DEEPL_API_KEY?: string;
}>;
export type EnvConfig = z.infer<typeof envConfigSchema>;
